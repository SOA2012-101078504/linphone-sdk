.linux-prepare:

  cache:
    key: linux-build
    paths:
      - ccache/

  extends: .job-prepare

  rules:
    - if: $SKIP_LINUX
      when: never

  variables:
    CACHE_COMPRESSION_LEVEL: "fastest"
    FF_USE_FASTZIP: 1
    FF_SCRIPT_SECTIONS: 1

  before_script:
    ##
    ## If a TUNNEL_USER_KEY is defined then start ssh-agent and add the key
    ##
    - if ! [ -z ${TUNNEL_USER_KEY+x} ]; then eval $(ssh-agent -s); fi
    - if ! [ -z ${TUNNEL_USER_KEY+x} ]; then echo "$TUNNEL_USER_KEY" | tr -d '\r' | ssh-add - > /dev/null; fi
    - if ! [ -z ${TUNNEL_USER_KEY+x} ]; then mkdir -p ~/.ssh && chmod 700 ~/.ssh; fi
    - if ! [ -z ${TUNNEL_USER_KEY+x} ]; then echo -e "Host gitlab.linphone.org\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config; fi
    - if ! [ -z ${TUNNEL_USER_KEY+x} ]; then chmod 700 ~/.ssh/config; fi

    ##
    ## Then configure ccache
    ##
    - mkdir -p ccache
    - echo "max_size = 20G" > ccache/ccache.conf
    - echo $CCACHE_SIZE
    - echo ${PWD}/ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache
    # This function converts the version given to a raw number in order for sh -ge to compare it to the other.
    # Here we get the ccache version by parsing the --version with grep and perl-style regex. If this option isn't available for some reason, remember to fallback to [0-9] instead of \d
    - |
        function version { echo "$@" | awk -F. '{ printf("%d%03d%03d%03d\n", $1,$2,$3,$4); }'; }
        if [ $(version $(ccache --version | grep -P "\d+\.\d+" -o)) -ge $(version "3.7") ]; then
          echo "CCACHE_COMPILERCHECK = content" >> ccache/ccache.conf
          echo "Ccache >= 3.7, we can use 'content' mode to get more cache hits"
        else
          echo "Ccache < 3.7, we can't use 'content' mode to get more cache hits"
        fi
    - ccache -s
    - ccache -z
    # no need to use --print-stats unless for parsing. -s already gives all needed information, it just hides output with 0
    - ccache -s

    ##
    ## Set max number of jobs
    ##
    - !reference [.set-max-jobs-unix, script]

    #Configure dev-toolset for centos-7

    - CENTOS_VERSION=$(cat /etc/centos-release) || true
    - if [ -n "$CENTOS_VERSION" ] && [ -n "$(echo $CENTOS_VERSION | grep -o 'release 7')" ]; then source /opt/rh/devtoolset-8/enable; fi

  after_script:
    - if ! [ -z ${TUNNEL_USER_KEY+x} ]; then rm -rf ~/.ssh || true; fi
    - export CCACHE_DIR=${PWD}/ccache
    - ccache -s
